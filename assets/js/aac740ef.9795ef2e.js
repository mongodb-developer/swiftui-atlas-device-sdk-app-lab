"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[2833],{4137:(e,t,i)=>{i.d(t,{Zo:()=>c,kt:()=>w});var a=i(7294);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,a,n=function(e,t){if(null==e)return{};var i,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var s=a.createContext({}),d=function(e){var t=a.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},c=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var i=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(i),u=n,w=p["".concat(s,".").concat(u)]||p[u]||b[u]||r;return i?a.createElement(w,o(o({ref:t},c),{},{components:i})):a.createElement(w,o({ref:t},c))}));function w(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=i.length,o=new Array(r);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:n,o[1]=l;for(var d=2;d<r;d++)o[d]=i[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,i)}u.displayName="MDXCreateElement"},7106:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>b,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var a=i(7462),n=(i(7294),i(4137));const r={},o="Using HabitDetailView",l={unversionedId:"habit-detail-view/using-habit-detail-view",id:"habit-detail-view/using-habit-detail-view",title:"Using HabitDetailView",description:"We want to navigate from the list of habits to add a new Habit or to edit an existing one. For that we'll use HabitDetailView from ConfigView.",source:"@site/docs/9-habit-detail-view/3-using-habit-detail-view.mdx",sourceDirName:"9-habit-detail-view",slug:"/habit-detail-view/using-habit-detail-view",permalink:"/swiftui-atlas-device-sdk-app-lab/docs/habit-detail-view/using-habit-detail-view",draft:!1,editUrl:"https://github.com/mongodb-developer/swiftui-atlas-device-sdk-app-lab/blob/main/docs/9-habit-detail-view/3-using-habit-detail-view.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Adding and Editing Habits",permalink:"/swiftui-atlas-device-sdk-app-lab/docs/habit-detail-view/habit-detail-view-edit"},next:{title:"Passing an initial List of Habits",permalink:"/swiftui-atlas-device-sdk-app-lab/docs/habit-detail-view/initial-habits-creation"}},s={},d=[{value:"Add a @State variable",id:"add-a-state-variable",level:2},{value:"Add a NavigationLink",id:"add-a-navigationlink",level:2},{value:"Add button that shows a Sheet",id:"add-button-that-shows-a-sheet",level:2}],c={toc:d},p="wrapper";function b(e){let{components:t,...i}=e;return(0,n.kt)(p,(0,a.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"using-habitdetailview"},"Using HabitDetailView"),(0,n.kt)("p",null,"We want to navigate from the list of habits to add a new Habit or to edit an existing one. For that we'll use ",(0,n.kt)("inlineCode",{parentName:"p"},"HabitDetailView")," from ",(0,n.kt)("inlineCode",{parentName:"p"},"ConfigView"),"."),(0,n.kt)("h2",{id:"add-a-state-variable"},"Add a @State variable"),(0,n.kt)("p",null,"To control if we're adding or editing, we'll use a ",(0,n.kt)("inlineCode",{parentName:"p"},"@State")," var"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-swift",metastring:"title='/UI/ConfigView.swift'",title:"'/UI/ConfigView.swift'"},"    @State private var isShowingSheet = false\n")),(0,n.kt)("h2",{id:"add-a-navigationlink"},"Add a NavigationLink"),(0,n.kt)("p",null,"We add a Navigation Link on each Cell so when we click on that ",(0,n.kt)("inlineCode",{parentName:"p"},"HabitCellView")," cell we navigate to ",(0,n.kt)("inlineCode",{parentName:"p"},"HabitDetailView")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-swift",metastring:"title='/UI/ConfigView.swift'",title:"'/UI/ConfigView.swift'"},"    List {\n        ForEach(habits.habits) { habit in\n            NavigationLink(destination: HabitDetailView(habit: habit, \n                                                        habits: habits,\n                                                        isAddingNewHabit: $isShowingSheet)) {\n                HabitCellView(habit: habit)\n            }\n        }\n        // ...\n    }\n    .scrollContentBackground(.hidden)\n")),(0,n.kt)("h2",{id:"add-button-that-shows-a-sheet"},"Add button that shows a Sheet"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-swift",metastring:"title='/UI/ConfigView.swift'",title:"'/UI/ConfigView.swift'"},'NavigationStack {\n    List {\n        // hidden for clarity\n    }\n    .scrollContentBackground(.hidden)\n    .navigationTitle("Habits")\n    .navigationBarItems(trailing: EditButton())\n    // new code here \ud83d\udc47\n    .toolbar {\n        ToolbarItem(placement: .bottomBar) {\n            Button(action: {\n                isShowingSheet.toggle()\n            }) {\n                Image(systemName: "plus.circle.fill")\n                    .resizable()\n                    .frame(width: 50.0, height: 50.0)\n            }\n        }\n    }\n    .sheet(isPresented: $isShowingSheet) {\n        HabitDetailView(isAddingNewHabit: $isShowingSheet, habits: habits)\n    }\n    // new code here \ud83d\udc46\n}\n')))}b.isMDXComponent=!0}}]);