"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[9742],{4137:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),d=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=d(e.components);return i.createElement(s.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=d(n),u=r,b=m["".concat(s,".").concat(u)]||m[u]||c[u]||o;return n?i.createElement(b,a(a({ref:t},p),{},{components:n})):i.createElement(b,a({ref:t},p))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:r,a[1]=l;for(var d=2;d<o;d++)a[d]=n[d];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1686:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var i=n(7462),r=(n(7294),n(4137));const o={},a="Edit, delete and move buttons",l={unversionedId:"edit-delete-move-habits-list/edit-delete-move-habits",id:"edit-delete-move-habits-list/edit-delete-move-habits",title:"Edit, delete and move buttons",description:"Edit button",source:"@site/docs/8-edit-delete-move-habits-list/1-edit-delete-move-habits.mdx",sourceDirName:"8-edit-delete-move-habits-list",slug:"/edit-delete-move-habits-list/edit-delete-move-habits",permalink:"/swiftui-realm-app-workshop/docs/edit-delete-move-habits-list/edit-delete-move-habits",draft:!1,editUrl:"https://github.com/mongodb-developer/swiftui-realm-app-workshop/blob/main/docs/8-edit-delete-move-habits-list/1-edit-delete-move-habits.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Edit, Delete and Move your Habits in a List",permalink:"/swiftui-realm-app-workshop/docs/category/edit-delete-and-move-your-habits-in-a-list"},next:{title:"Habit Detail View",permalink:"/swiftui-realm-app-workshop/docs/category/habit-detail-view"}},s={},d=[{value:"Edit button",id:"edit-button",level:2},{value:"Move and delete buttons",id:"move-and-delete-buttons",level:2}],p={toc:d},m="wrapper";function c(e){let{components:t,...o}=e;return(0,r.kt)(m,(0,i.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"edit-delete-and-move-buttons"},"Edit, delete and move buttons"),(0,r.kt)("h2",{id:"edit-button"},"Edit button"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"we'll add an Edit Button to the ",(0,r.kt)("inlineCode",{parentName:"li"},"ConfigView"),". This way the List will enter Edit mode to delete / move rows. When we move or delete a row, this will be reflected in Realm.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift",metastring:"title='ConfigView.swift'",title:"'ConfigView.swift'"},"    List {\n        /// same code\n    }\n    .navigationBarItems(trailing: EditButton())\n")),(0,r.kt)("h2",{id:"move-and-delete-buttons"},"Move and delete buttons"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"we add to ",(0,r.kt)("inlineCode",{parentName:"li"},"ForEach")," these two lines:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift",metastring:"title='ConfigView.swift'",title:"'ConfigView.swift'"},".onDelete(perform: $habits.habits.remove)\n.onMove(perform: $habits.habits.move)\n")),(0,r.kt)("p",null,"Now we can swipe the cell and get a working delete button that'll call ",(0,r.kt)("inlineCode",{parentName:"p"},"$habits.habits.remove"),", removing this object from the Realm when we remove the row from the list."),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(3015).Z,width:"456",height:"256"})),(0,r.kt)("p",null,"We can also enter Edit mode and move cells around thanks to ",(0,r.kt)("inlineCode",{parentName:"p"},"$habits.habits.move"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(9019).Z,width:"600",height:"1121"})))}c.isMDXComponent=!0},3015:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/delete-eee4fed45eea9af736e0e042638d6b52.png"},9019:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/move-36e552244f755e29c0c4d35159b31dfb.png"}}]);