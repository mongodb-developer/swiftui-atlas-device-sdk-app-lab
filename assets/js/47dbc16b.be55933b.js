"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[3346],{4137:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>f});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),d=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=d(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=d(a),u=r,f=p["".concat(c,".").concat(u)]||p[u]||y[u]||i;return a?n.createElement(f,l(l({ref:t},s),{},{components:a})):n.createElement(f,l({ref:t},s))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var d=2;d<i;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},5041:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>y,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var n=a(7462),r=(a(7294),a(4137));const i={},l="DayCellView",o={unversionedId:"today-view/day-cell",id:"today-view/day-cell",title:"DayCellView",description:"DayCellView",source:"@site/docs/10-today-view/3-day-cell.mdx",sourceDirName:"10-today-view",slug:"/today-view/day-cell",permalink:"/swiftui-atlas-device-sdk-app-lab/docs/today-view/day-cell",draft:!1,editUrl:"https://github.com/mongodb-developer/swiftui-atlas-device-sdk-app-lab/blob/main/docs/10-today-view/3-day-cell.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Days View",permalink:"/swiftui-atlas-device-sdk-app-lab/docs/today-view/days-view"},next:{title:"Add Day Button",permalink:"/swiftui-atlas-device-sdk-app-lab/docs/today-view/add-button"}},c={},d=[{value:"DayCellView",id:"daycellview-1",level:2}],s={toc:d},p="wrapper";function y(e){let{components:t,...a}=e;return(0,r.kt)(p,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"daycellview"},"DayCellView"),(0,r.kt)("h2",{id:"daycellview-1"},"DayCellView"),(0,r.kt)("p",null,"We'll add a cell to show the information for each day."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift",metastring:"title='/UI/DaysView.swift'",title:"'/UI/DaysView.swift'"},'struct DayCellView: View {\n    @ObservedRealmObject var day: Day\n    \n    var body: some View {\n        VStack(alignment: .leading) {\n            Text("\\(day.date.formatted(date: .abbreviated, time: .omitted))")\n                .font(.title)\n        }.padding()\n    }\n}\n')),(0,r.kt)("p",null,"And we'll use it"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift",metastring:"title='/UI/DaysView.swift'",title:"'/UI/DaysView.swift'"},'ForEach(days) { day in\n    NavigationLink(destination: Text("TO DO")) {\n        DayCellView(day: day)\n    }\n}\n')))}y.isMDXComponent=!0}}]);