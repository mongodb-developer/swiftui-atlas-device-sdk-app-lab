"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[2833],{2455:(i,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>d,default:()=>c,frontMatter:()=>s,metadata:()=>o,toc:()=>r});var a=t(5893),n=t(1151);const s={},d="Using HabitDetailView",o={id:"habit-detail-view/using-habit-detail-view",title:"Using HabitDetailView",description:"We want to navigate from the list of habits to add a new Habit or to edit an existing one. For that we'll use HabitDetailView from ConfigView.",source:"@site/docs/9-habit-detail-view/3-using-habit-detail-view.mdx",sourceDirName:"9-habit-detail-view",slug:"/habit-detail-view/using-habit-detail-view",permalink:"/swiftui-atlas-device-sdk-app-lab/docs/habit-detail-view/using-habit-detail-view",draft:!1,unlisted:!1,editUrl:"https://github.com/mongodb-developer/swiftui-atlas-device-sdk-app-lab/blob/main/docs/9-habit-detail-view/3-using-habit-detail-view.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Adding and Editing Habits",permalink:"/swiftui-atlas-device-sdk-app-lab/docs/habit-detail-view/habit-detail-view-edit"},next:{title:"Passing an initial List of Habits",permalink:"/swiftui-atlas-device-sdk-app-lab/docs/habit-detail-view/initial-habits-creation"}},l={},r=[{value:"Add a @State variable",id:"add-a-state-variable",level:2},{value:"Add a NavigationLink",id:"add-a-navigationlink",level:2},{value:"Add button that shows a Sheet",id:"add-button-that-shows-a-sheet",level:2}];function h(i){const e={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,n.a)(),...i.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h1,{id:"using-habitdetailview",children:"Using HabitDetailView"}),"\n",(0,a.jsxs)(e.p,{children:["We want to navigate from the list of habits to add a new Habit or to edit an existing one. For that we'll use ",(0,a.jsx)(e.code,{children:"HabitDetailView"})," from ",(0,a.jsx)(e.code,{children:"ConfigView"}),"."]}),"\n",(0,a.jsx)(e.h2,{id:"add-a-state-variable",children:"Add a @State variable"}),"\n",(0,a.jsxs)(e.p,{children:["To control if we're adding or editing, we'll use a ",(0,a.jsx)(e.code,{children:"@State"})," var"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-swift",metastring:"title='/UI/ConfigView.swift'",children:"    @State private var isShowingSheet = false\n"})}),"\n",(0,a.jsx)(e.h2,{id:"add-a-navigationlink",children:"Add a NavigationLink"}),"\n",(0,a.jsxs)(e.p,{children:["We add a Navigation Link on each Cell so when we click on that ",(0,a.jsx)(e.code,{children:"HabitCellView"})," cell we navigate to ",(0,a.jsx)(e.code,{children:"HabitDetailView"})]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-swift",metastring:"title='/UI/ConfigView.swift'",children:"    List {\n        ForEach(habits.habits) { habit in\n            NavigationLink(destination: HabitDetailView(habit: habit, \n                                                        habits: habits,\n                                                        isAddingNewHabit: $isShowingSheet)) {\n                HabitCellView(habit: habit)\n            }\n        }\n        // ...\n    }\n    .scrollContentBackground(.hidden)\n"})}),"\n",(0,a.jsx)(e.h2,{id:"add-button-that-shows-a-sheet",children:"Add button that shows a Sheet"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-swift",metastring:"title='/UI/ConfigView.swift'",children:'NavigationStack {\n    List {\n        // hidden for clarity\n    }\n    .scrollContentBackground(.hidden)\n    .navigationTitle("Habits")\n    .navigationBarItems(trailing: EditButton())\n    // new code here \ud83d\udc47\n    .toolbar {\n        ToolbarItem(placement: .bottomBar) {\n            Button(action: {\n                isShowingSheet.toggle()\n            }) {\n                Image(systemName: "plus.circle.fill")\n                    .resizable()\n                    .frame(width: 50.0, height: 50.0)\n            }\n        }\n    }\n    .sheet(isPresented: $isShowingSheet) {\n        HabitDetailView(isAddingNewHabit: $isShowingSheet, habits: habits)\n    }\n    // new code here \ud83d\udc46\n}\n'})})]})}function c(i={}){const{wrapper:e}={...(0,n.a)(),...i.components};return e?(0,a.jsx)(e,{...i,children:(0,a.jsx)(h,{...i})}):h(i)}},1151:(i,e,t)=>{t.d(e,{Z:()=>o,a:()=>d});var a=t(7294);const n={},s=a.createContext(n);function d(i){const e=a.useContext(s);return a.useMemo((function(){return"function"==typeof i?i(e):{...e,...i}}),[e,i])}function o(i){let e;return e=i.disableParentContext?"function"==typeof i.components?i.components(n):i.components||n:d(i.components),a.createElement(s.Provider,{value:e},i.children)}}}]);