"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[8746],{4137:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>f});var r=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,i=function(e,t){if(null==e)return{};var a,r,i={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var o=r.createContext({}),c=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,i=e.mdxType,n=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(a),u=i,f=d["".concat(o,".").concat(u)]||d[u]||m[u]||n;return a?r.createElement(f,s(s({ref:t},p),{},{components:a})):r.createElement(f,s({ref:t},p))}));function f(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=a.length,s=new Array(n);s[0]=u;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[d]="string"==typeof e?e:i,s[1]=l;for(var c=2;c<n;c++)s[c]=a[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},615:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>m,frontMatter:()=>n,metadata:()=>l,toc:()=>c});var r=a(7462),i=(a(7294),a(4137));const n={},s="Habits model class",l={unversionedId:"create-models/habits",id:"create-models/habits",title:"Habits model class",description:"- create an Habits class, a list of Habits. Here we use a RealmSwift List. As there's also now a SwiftUIList, we need to add the namespace RealmSwift.List",source:"@site/docs/4-create-models/2-habits.mdx",sourceDirName:"4-create-models",slug:"/create-models/habits",permalink:"/swiftui-atlas-device-sdk-app-lab/docs/create-models/habits",draft:!1,editUrl:"https://github.com/mongodb-developer/swiftui-atlas-device-sdk-app-lab/blob/main/docs/4-create-models/2-habits.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Habit model class",permalink:"/swiftui-atlas-device-sdk-app-lab/docs/create-models/habit"},next:{title:"Display a List of Habits!",permalink:"/swiftui-atlas-device-sdk-app-lab/docs/add-list-habits-view"}},o={},c=[],p={toc:c},d="wrapper";function m(e){let{components:t,...a}=e;return(0,i.kt)(d,(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"habits-model-class"},"Habits model class"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"create an ",(0,i.kt)("inlineCode",{parentName:"li"},"Habits")," class, a list of Habits. Here we use a ",(0,i.kt)("inlineCode",{parentName:"li"},"RealmSwift")," List. As there's also now a ",(0,i.kt)("inlineCode",{parentName:"li"},"SwiftUI"),"List, we need to add the namespace ",(0,i.kt)("inlineCode",{parentName:"li"},"RealmSwift.List"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift",metastring:"title='/Model/Habits.swift'",title:"'/Model/Habits.swift'"},"import RealmSwift\n\nclass Habits: Object {\n    @Persisted(primaryKey: true) var _id: ObjectId\n\n    @Persisted var habits = RealmSwift.List<Habit>()\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"if we want to reference from one habit to the list of habits, we'll a ",(0,i.kt)("inlineCode",{parentName:"li"},"group")," propery to our ",(0,i.kt)("inlineCode",{parentName:"li"},"Habit")," class:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift",metastring:"title='/Model/Habit.swift'",title:"'/Model/Habit.swift'"},'    // backlink\n    @Persisted(originProperty: "habits") var group: LinkingObjects<Habits>\n')))}m.isMDXComponent=!0}}]);