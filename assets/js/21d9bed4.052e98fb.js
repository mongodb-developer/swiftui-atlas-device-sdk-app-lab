"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[8746],{4137:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),c=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(r),d=n,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return r?a.createElement(f,o(o({ref:t},p),{},{components:r})):a.createElement(f,o({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:n,o[1]=s;for(var c=2;c<i;c++)o[c]=r[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},615:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=r(7462),n=(r(7294),r(4137));const i={},o="Habits model class",s={unversionedId:"create-models/habits",id:"create-models/habits",title:"Habits model class",description:"- create an Habits class, a list of Habits. Here we use a RealmSwift List. As there's also now a SwiftUIList, we need to add the namespace RealmSwift.List",source:"@site/docs/4-create-models/2-habits.mdx",sourceDirName:"4-create-models",slug:"/create-models/habits",permalink:"/swiftui-realm-app-workshop/docs/create-models/habits",draft:!1,editUrl:"https://github.com/mongodb-developer/swiftui-realm-app-workshop/blob/main/docs/4-create-models/2-habits.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Habit model class",permalink:"/swiftui-realm-app-workshop/docs/create-models/habit"},next:{title:"Display a List of Habits!",permalink:"/swiftui-realm-app-workshop/docs/add-list-habits-view"}},l={},c=[],p={toc:c},m="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(m,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"habits-model-class"},"Habits model class"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"create an ",(0,n.kt)("inlineCode",{parentName:"li"},"Habits")," class, a list of Habits. Here we use a ",(0,n.kt)("inlineCode",{parentName:"li"},"RealmSwift")," List. As there's also now a ",(0,n.kt)("inlineCode",{parentName:"li"},"SwiftUI"),"List, we need to add the namespace ",(0,n.kt)("inlineCode",{parentName:"li"},"RealmSwift.List"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-swift",metastring:"title='/Model/Habits.swift'",title:"'/Model/Habits.swift'"},"import RealmSwift\n\nclass Habits: Object {\n    @Persisted(primaryKey: true) var _id: ObjectId\n\n    @Persisted var habits = RealmSwift.List<Habit>()\n}\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"if we want to reference from one habit to the list of habits, we'll a ",(0,n.kt)("inlineCode",{parentName:"li"},"group")," propery to our ",(0,n.kt)("inlineCode",{parentName:"li"},"Habit")," class:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-swift",metastring:"title='/Model/Habit.swift'",title:"'/Model/Habit.swift'"},'    // backlink\n    @Persisted(originProperty: "habits") var group: LinkingObjects<Habits>\n')))}u.isMDXComponent=!0}}]);