"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[2740],{4137:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),s=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(o.Provider,{value:t},e.children)},b="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),b=s(r),d=a,f=b["".concat(o,".").concat(d)]||b[d]||u[d]||i;return r?n.createElement(f,l(l({ref:t},p),{},{components:r})):n.createElement(f,l({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=d;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c[b]="string"==typeof e?e:a,l[1]=c;for(var s=2;s<i;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3602:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var n=r(7462),a=(r(7294),r(4137));const i={},l="Extract the HabitCellView",c={unversionedId:"better-habit-cell/extract-habit-cell",id:"better-habit-cell/extract-habit-cell",title:"Extract the HabitCellView",description:"- We'll extract all the Cell code, and put it in a different View",source:"@site/docs/7-better-habit-cell/2-extract-habit-cell.mdx",sourceDirName:"7-better-habit-cell",slug:"/better-habit-cell/extract-habit-cell",permalink:"/swiftui-atlas-device-sdk-app-lab/docs/better-habit-cell/extract-habit-cell",draft:!1,editUrl:"https://github.com/mongodb-developer/swiftui-atlas-device-sdk-app-lab/blob/main/docs/7-better-habit-cell/2-extract-habit-cell.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Better Habit Cell",permalink:"/swiftui-atlas-device-sdk-app-lab/docs/better-habit-cell/better-habit-cell"},next:{title:"Edit, Delete and Move your Habits in a List",permalink:"/swiftui-atlas-device-sdk-app-lab/docs/category/edit-delete-and-move-your-habits-in-a-list"}},o={},s=[],p={toc:s},b="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(b,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"extract-the-habitcellview"},"Extract the HabitCellView"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"We'll extract all the Cell code, and put it in a different View")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift",metastring:"title='ConfigView.swift'",title:"'ConfigView.swift'"},'struct HabitCellView: View {\n    @ObservedRealmObject var habit: Habit\n\n    var body: some View {\n        VStack(alignment: .leading) {\n            Text("\\(habit.name)")\n                .font(.title)\n            Text("\\(habit.desc)")\n        }.padding()\n    }\n}\n')),(0,a.kt)("p",null,"We're injecting here the Habit we need to display."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"we use this in the ",(0,a.kt)("inlineCode",{parentName:"li"},"List"),":")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift",metastring:"title='ConfigView.swift'",title:"'ConfigView.swift'"},"List {\n    ForEach(habits.habits) { habit in\n        HabitCellView(habit: habit)\n    }\n}\n")))}u.isMDXComponent=!0}}]);